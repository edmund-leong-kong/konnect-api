extends:
  - "spectral:oas"
functionsDir: "./spectral-rules"
functions:
  - siblings
rules:
  # ---------------------------------------------------------------------------
  # Schema rules
  # ---------------------------------------------------------------------------

  no-siblings:
    severity: error
    given:
      - $..[?(@property === 'allOf')]
      - $..[?(@property === 'oneOf')]
      - $..[?(@property === 'anyOf')]
    then:
      function: siblings

  info-version-semver:
    severity: error
    recommended: true
    message: Specs should follow semantic versioning. {{value}} is not a valid version.
    given: $.info.version
    then:
      function: pattern
      functionOptions:
        match: "^([0-9]+.[0-9]+.[0-9]+)$"

  path-summary-required:
    description: All paths require a summary
    severity: error
    message: Missing {{property}} at {{path}}
    given: $.paths.*[get,post,patch,put,delete]
    then:
      - field: "summary"
        function: truthy

  #operationId-required:
  #  description: All paths require an operationId
  #  severity: error
  #  message: Missing {{property}} at {{path}}
  #  given: $.paths.*[get,post,patch,put,delete]
  #  then:
  #    - field: "operationId"
  #      function: truthy

  adv-parameter-property-include-id-check:
    description: |-
      If property or path parameters contain 'ID' it should have Id instead of ID.
    severity: warn
    message: >-
      {{property}} contains the letters ID, If this is short for identifier it MAY be Id instead.
    given:
      - $..parameters..name
      - $.components.schemas[*]..properties[*]~
    then:
      function: pattern
      functionOptions:
        notMatch: /.*([^A-Z])(ID)(?![A-Z])+.*/

  oas-version:
    severity: error
    description: OAS version 3.1.x is unsupported.
    message: >-
      OAS version {{value}} is unsupported. Only OAS versions 3.0.x are supported.
    given: $
    then:
      field: openapi
      function: pattern
      functionOptions:
        match: '^(3\.0\.[0-3]+)$'

  server-not-include-variables:
    description: Server block must not contain variables
    severity: error
    recommended: true
    message: "{{property}} must not contain any variables"
    given:
      - $.servers[*].url
    then:
      function: pattern
      functionOptions:
        notMatch: "[{}]"

  server-in-approved-list:
    description: Server block must be us, eu or global.api.konghq.com, or be a `.svc.cluster.local` address for internal APIs
    severity: error
    recommended: true
    message: "{{error}}"
    given:
      - $.servers[*].url
    then:
      function: pattern
      functionOptions:
        match: "((https://(us|eu|au|me|global).api.konghq.com/v(\\d+))|(.*svc\\.cluster\\.local.*))"

  title-prefix:
    severity: error
    description: "Titles must be prefixed with their product. One of [Konnect, Portal, Gateway, Internal]"
    message: >-
      "{{value}}" must start with "Konnect", "Portal", "Gateway" or "Internal"
    given: $.info.title
    then:
      function: pattern
      functionOptions:
        match: '^(Konnect|Portal|Gateway|Internal)'
  title-no-api-suffix:
    severity: error
    description: "Titles must not end with 'API'"
    message: >-
      "{{value}}" must not have an "API" suffix
    given: $.info.title
    then:
      function: pattern
      functionOptions:
        notMatch: 'API\s?$'

  # ---------------------------------------------------------------------------
  # API Rules
  # ---------------------------------------------------------------------------

  server-url-must-contain-version-aip-3101:
    description: Global API version must be present in the path
    severity: error
    recommended: true
    message: "Unversioned server URL detected: {{value}}"
    given: "$.servers[*].url"
    then:
      function: pattern
      functionOptions:
        match: "\/v[0-9]+\/"

  paths-kebab-case-aip-122:
    description: All YAML/JSON paths MUST follow kebab-case
    severity: error
    recommended: true
    message: "{{property}} is not kebab-case"
    given: $.paths[*]~
    then:
      function: pattern
      functionOptions:
        match: "^((\/[-a-z0-9]+)|(\/{[-a-zA-Z]+}))*(\\.\\w+)?$" # doesn't allow /asasd{asdas}sadas pattern or not closed braces

  paths-not-include-api:
    description: Paths must not include /api/
    severity: error
    recommended: true
    message: "{{property}} must not contain /api/"
    given:
      - $.paths[*]~
      - $.servers[*].url
    then:
      function: pattern
      functionOptions:
        notMatch: "\/api\/|\/api$"

  path-parameters-camelCase-alphanumeric:
    description: Path parameters MUST follow camelCase
    severity: error
    recommended: true
    message: "{{property}} path parameter is not camelCase: {{error}}"
    given: $..parameters[?(@.in == 'path')].name
    then:
      function: pattern
      functionOptions:
        match: "^[a-z][a-zA-Z0-9]+$"

  properties-snake-case-aip-122:
    description: Property name has to be ASCII snake_case
    severity: error
    recommended: true
    message: "Invalid property name: {{value}} (expected: lowercase with underscores)"
    given:
      - $.paths.*.*[responses,requestBody]..content..schema.properties.*~
      - $..components.schemas.*.properties[*]~
      # If you're seeing this on a $ref then check where it's used
      # as it's likely that the parent property name is incorrect
      # This is a bug in Spectral
      - $.paths.*[post,get,patch,put,delete].parameters[?(@.in == "query")].schema.properties.*~
    then:
      function: pattern
      functionOptions:
        match: "^[a-z_]+$"

  query-parameters-properties-snake-case-and-square-brackets-aip-122:
    description: Query parameters must be snake case. Square brackets are allowed (e.g. page[number]=1)
    severity: error
    recommended: true
    message: "Invalid property name: {{value}} (expected: lowercase with underscores)"
    given:
      - $..parameters[?(@.in == 'query')].name
    then:
      function: pattern
      functionOptions:
        match: "^[a-z_\\[\\]]+$"

  query-parameters-filter-deepobject:
    severity: error
    description: Filter parameters must set style=deepObject
    given: "$..parameters[?(@.in == 'query' && @.name == 'filter')]*"
    then:
      - field: style
        function: truthy
        message: "{{property}}: {{ description }}"
      - field: style
        message: "{{property}}: {{ description }}"
        function: pattern
        functionOptions:
          match: /^deepObject$/

  headers-hyphenated-pascal-case:
    description: All `HTTP` headers MUST use `Hyphenated-Pascal-Case` notation
    severity: error
    given: "$..parameters[?(@.in == 'header')].name"
    message: "'HTTP' headers MUST follow 'Hyphenated-Pascal-Case' notation"
    recommended: true
    type: style
    then:
      function: pattern
      functionOptions:
        match: "/^([A-Z][a-z0-9]-)*([A-Z][a-z0-9])+/"

  request-GET-no-body:
    description: "A 'GET' request MUST NOT accept a 'body` parameter"
    severity: error
    given: $.paths..get.requestBody
    then:
      function: pattern
      functionOptions:
        notMatch: "/^body$/"

  errors-problem-json-aip-193:
    description: "Errors must use application/problem+json"
    severity: error
    given:
      - $..400.content.*~
      - $..401.content.*~
      - $..402.content.*~
      - $..403.content.*~
      - $..404.content.*~
      - $..405.content.*~
      - $..406.content.*~
      - $..407.content.*~
      - $..408.content.*~
      - $..409.content.*~
      - $..410.content.*~
      - $..411.content.*~
      - $..412.content.*~
      - $..413.content.*~
      - $..414.content.*~
      - $..415.content.*~
      - $..416.content.*~
      - $..417.content.*~
      - $..418.content.*~
      - $..422.content.*~
      - $..425.content.*~
      - $..426.content.*~
      - $..428.content.*~
      - $..429.content.*~
      - $..431.content.*~
      - $..451.content.*~
    then:
      function: pattern
      functionOptions:
        match: 'application/problem\+json'

  errors-require-type-aip-193:
    severity: error
    given:
      - $..401.content.*.schema..properties
      - $..402.content.*.schema..properties
      - $..403.content.*.schema..properties
      - $..404.content.*.schema..properties
      - $..405.content.*.schema..properties
      - $..406.content.*.schema..properties
      - $..407.content.*.schema..properties
      - $..408.content.*.schema..properties
      - $..409.content.*.schema..properties
      - $..410.content.*.schema..properties
      - $..411.content.*.schema..properties
      - $..412.content.*.schema..properties
      - $..413.content.*.schema..properties
      - $..414.content.*.schema..properties
      - $..415.content.*.schema..properties
      - $..416.content.*.schema..properties
      - $..417.content.*.schema..properties
      - $..418.content.*.schema..properties
      - $..422.content.*.schema..properties
      - $..425.content.*.schema..properties
      - $..426.content.*.schema..properties
      - $..428.content.*.schema..properties
      - $..429.content.*.schema..properties
      - $..431.content.*.schema..properties
      - $..451.content.*.schema..properties
    then:
      function: schema
      functionOptions:
        allErrors: true
        schema:
          type: object
          required:
            - type
            - status
            - title
            - instance

  validation-error-invalid-parameters-aip-193:
    severity: error
    given:
      # The weird selector here is due to Spectral not supporting the [1:] slice selector
      - $..400.content.*.schema.allOf[1,2,3,4,5,6,7,8,9].properties
      - $..400.content.*.schema.properties
    then:
      function: schema
      functionOptions:
        allErrors: true
        schema:
          type: object
          required:
            - invalid_parameters
          properties:
            invalid_parameters:
              type: object
              properties:
                items:
                  type: object
                  properties:
                    properties:
                      type: object
                      required:
                        - field
                        - rule

  errors-delete-contains-404-aip-135:
    description: "DELETE operations must contain a 404 (returned when an ID is not found)"
    severity: error
    given:
      - $.paths..delete
    then:
      field: responses
      function: schema
      functionOptions:
        schema:
          type: object
          required:
            - "404"

  errors-post-not-contain-200:
    description: "POST operations must not contain a 200 (created must return 201)"
    severity: error
    given:
      - $.paths..post
    then:
      field: responses
      function: schema
      functionOptions:
        schema:
          not:
            type: object
            required:
              - "200"

  blocked-field-names:
    severity: error
    given: $.paths.*.*[responses,requestBody]..content..schema..properties.*~
    message: "The field '{{property}}' has a preferred synonym. See ./docs/linting-rules.md"
    then:
      - function: pattern
        functionOptions:
          notMatch: "^modified_at$"
      - function: pattern
        functionOptions:
          notMatch: "whitelist"
      - function: pattern
        functionOptions:
          notMatch: "blacklist"

overrides:

  - files:
      - "src/**/*"
    rules:
      operation-operationId: "error"

  - files:
    - "src/portal/definitions/products/**/openapi.yaml#/components/schemas/ListBlock"
    - "src/portal/definitions/products/**/openapi.yaml#/components/schemas/Text"
    - "src/konnect/definitions/api-products/**/openapi.yaml#/components/schemas/Text"
    - "src/konnect/definitions/api-products/**/openapi.yaml#/components/schemas/ListBlock"
    - "src/konnect/definitions/servicehub/**/openapi.yaml#/components/schemas/IntegrationDataFieldFilter"
    - "src/konnect/definitions/servicehub/**/openapi.yaml#/components/schemas/DiscoveredEntityFilterParameters"
    - "src/konnect/definitions/servicehub/**/openapi.yaml#/components/schemas/DiscoveryActionFilterParameters"
    - "src/konnect/definitions/servicehub/**/openapi.yaml#/components/schemas/DiscoverySuggestionRuleFilterParameters"
    - "src/konnect/definitions/servicehub/**/openapi.yaml#/components/schemas/SuggestedDiscoveryActionFilterParameters"
    rules:
      properties-snake-case-aip-122: "off"
  - files:
    # verify domain override
    - "src/konnect/definitions/portal-management/v2/**/openapi.yaml#/paths/~1portals~1%7BportalId%7D~1verify-domain/post/responses"
    - "src/konnect/definitions/portal-management/v3/**/openapi.yaml#/paths/~1portals~1%7BportalId%7D~1verify-domain/post/responses"
    - "src/konnect/definitions/application-auth-strategies/v2/**/openapi.yaml#/paths"
    - "src/konnect/definitions/servicehub/**/openapi.yaml#/paths/~1discovery~1integration~1%7Bintegration%7D~1suggestion-rules~1test/post/responses"
    rules:
      errors-post-not-contain-200: "off"
  - files:
      - "src/konnect/definitions/mesh-control-planes/v0/**/openapi.yaml"
    rules:
      server-url-must-contain-version-aip-3101: "off"
      paths-kebab-case-aip-122: "off"
      properties-snake-case-aip-122: "off"
      server-in-approved-list: "off"
  - files:
      - "src/konnect/definitions/audit-logs/v2/**/openapi.yaml"
    rules:
      errors-require-type-aip-193: "off"
      validation-error-invalid-parameters-aip-193: "off"
  - files:
      - "src/konnect/definitions/identity/v2/**/openapi.yaml"
      - "src/konnect/definitions/identity/v3/**/openapi.yaml"
    rules:
      errors-require-type-aip-193: "off"
      validation-error-invalid-parameters-aip-193: "off"
  - files:
      - "src/konnect/definitions/runtime-groups/v2/**/openapi.yaml"
      - "src/konnect/definitions/control-planes/v2/**/openapi.yaml"
    rules:
      errors-require-type-aip-193: "off"
      validation-error-invalid-parameters-aip-193: "off"
  - files:
      - "src/portal/definitions/products/**/openapi.yaml"
    rules:
      errors-require-type-aip-193: "off"
      validation-error-invalid-parameters-aip-193: "off"
  - files:
      - "src/portal/definitions/**/*"
      - "output/portal/*"
    rules:
      paths-not-include-api: "off"
      oas3-api-servers: "off"
      server-url-must-contain-version-aip-3101: "off"
  - files:
    - "src/konnect/definitions/api-builder/**/openapi.yaml"
    rules:
      paths-not-include-api: "off"
  - files:
      - "src/konnect/definitions/identity/v2/**/openapi.yaml"
      - "src/konnect/definitions/identity/v3/**/openapi.yaml"
      - "src/konnect/definitions/runtime-groups-config/v2/**/openapi.yaml"
      - "src/konnect/definitions/control-planes-config/v2/**/openapi.yaml"
    rules:
      errors-delete-contains-404-aip-135: "off"
  - files:
      - "src/portal/definitions/developer/**/openapi.yaml"
    rules:
      errors-post-not-contain-200: "off"
  - files:
      # This should be a 403, not a 400. It's missing invalid_parameters
      - "src/konnect/definitions/runtime-groups/v2/**/openapi.yaml#/components/examples/400UsageLimitsReachedExample"
      - "src/konnect/definitions/control-planes/v2/**/openapi.yaml#/components/examples/400UsageLimitsReachedExample"
      # The 'unknownProperty' rule isn't in the enum of allowed types
      - "src/konnect/definitions/runtime-groups/v2/**/openapi.yaml#/components/examples/400UnknownPropertyExample"
      - "src/konnect/definitions/control-planes/v2/**/openapi.yaml#/components/examples/400UnknownPropertyExample"
      # The next block are errors that are missing a "detail" field as we made it required after the endpoints were built
      ## Runtime Groups
      - "src/konnect/definitions/runtime-groups/v2/**/openapi.yaml#/components/examples/400RequestFormatInvalidExample"
      - "src/konnect/definitions/runtime-groups/v2/**/openapi.yaml#/components/examples/400CannotBeBlankExample"
      - "src/konnect/definitions/runtime-groups/v2/**/openapi.yaml#/components/examples/400InvalidIDFormatExample"
      - "src/konnect/definitions/control-planes/v2/**/openapi.yaml#/components/examples/400RequestFormatInvalidExample"
      - "src/konnect/definitions/control-planes/v2/**/openapi.yaml#/components/examples/400CannotBeBlankExample"
      - "src/konnect/definitions/control-planes/v2/**/openapi.yaml#/components/examples/400InvalidIDFormatExample"
      ## Identity
      - "src/konnect/definitions/identity/v2/**/openapi.yaml#/components/examples/400-request-format-is-invalid"
      - "src/konnect/definitions/identity/v2/**/openapi.yaml#/components/examples/400-cannot-be-blank"
      - "src/konnect/definitions/identity/v2/**/openapi.yaml#/components/examples/400-invalid-id-format"
      - "src/konnect/definitions/identity/v2/**/openapi.yaml#/components/examples/400-valid-uuid"
      - "src/konnect/definitions/identity/v2/**/openapi.yaml#/components/examples/400-systems-team-modified"
      - "src/konnect/definitions/identity/v2/**/openapi.yaml#/components/examples/400-authentication-settings-cannot-be-both-disabled"
      - "src/konnect/definitions/identity/v2/**/openapi.yaml#/components/examples/400-oidc-auth-enabled-needs-idp"
      - "src/konnect/definitions/identity/v2/**/openapi.yaml#/components/responses/IdentityBadRequest"
      - "src/konnect/definitions/identity/v3/**/openapi.yaml#/components/examples/400-request-format-is-invalid"
      - "src/konnect/definitions/identity/v3/**/openapi.yaml#/components/examples/400-cannot-be-blank"
      - "src/konnect/definitions/identity/v3/**/openapi.yaml#/components/examples/400-invalid-id-format"
      - "src/konnect/definitions/identity/v3/**/openapi.yaml#/components/examples/400-valid-uuid"
      - "src/konnect/definitions/identity/v3/**/openapi.yaml#/components/examples/400-systems-team-modified"
      - "src/konnect/definitions/identity/v3/**/openapi.yaml#/components/examples/400-authentication-settings-cannot-be-both-disabled"
      - "src/konnect/definitions/identity/v3/**/openapi.yaml#/components/examples/400-oidc-auth-enabled-needs-idp"
      - "src/konnect/definitions/identity/v3/**/openapi.yaml#/components/responses/IdentityBadRequest"
      ## Ksearch
      - "src/konnect/definitions/ksearch/v1/**/openapi.yaml#/components/examples/Successful-Search-Example"
    rules:
      oas3-valid-media-example: "off"
  - files:
      - "src/konnect/definitions/analytics-reports/v2/**/openapi.yaml#/paths/~1reports~1%7BreportId%7D~1export/post/responses"
      - "src/konnect/definitions/analytics-requests/v2/**/openapi.yaml#/paths/~1api-requests/post/responses"
      - "src/konnect/definitions/analytics-explore/v2/**/openapi.yaml#/paths/~1explore/post/responses"
      - "src/portal/definitions/analytics/v2/openapi.yaml#/paths/~1api~1v2~1stats/post/responses"
      - "src/portal/definitions/analytics/v2/openapi.yaml#/paths/~1api~1v2~1explore/post/responses"
    rules:
      errors-post-not-contain-200: "off"
  # Embedded Kong Gateway core-entities are not expected to pass
  - files:
      - "src/konnect/definitions/runtime-groups-config/v2/**/openapi.yaml"
      - "src/konnect/definitions/control-planes-config/v2/**/openapi.yaml#/paths/~1control-planes~1%7BcontrolPlaneId%7D~1core-entities~1ca_certificates"
      - "src/konnect/definitions/control-planes-config/v2/**/openapi.yaml#/paths/~1control-planes~1%7BcontrolPlaneId%7D~1core-entities~1ca_certificates~1%7Bca_certificate_id%7D"
      - "src/konnect/definitions/control-planes-config/v2/**/openapi.yaml#/paths/~1control-planes~1%7BcontrolPlaneId%7D~1core-entities~1services"
      - "src/konnect/definitions/control-planes-config/v2/**/openapi.yaml#/paths/~1control-planes~1%7BcontrolPlaneId%7D~1core-entities~1services~1%7Bservice_id%7D"
      - "src/konnect/definitions/control-planes-config/v2/**/openapi.yaml#/paths/~1control-planes~1%7BcontrolPlaneId%7D~1core-entities~1services~1%7Bservice_id%7D~1routes"
      - "src/konnect/definitions/control-planes-config/v2/**/openapi.yaml#/paths/~1control-planes~1%7BcontrolPlaneId%7D~1core-entities~1services~1%7Bservice_id%7D~1routes~1%7Broute_id%7D"
      - "src/konnect/definitions/control-planes-config/v2/**/openapi.yaml#/paths/~1control-planes~1%7BcontrolPlaneId%7D~1core-entities~1services~1%7Bservice_id%7D~1plugins"
      - "src/konnect/definitions/control-planes-config/v2/**/openapi.yaml#/paths/~1control-planes~1%7BcontrolPlaneId%7D~1core-entities~1services~1%7Bservice_id%7D~1plugins~1%7Bplugin_id_or_instance_name%7D"
      - "src/konnect/definitions/control-planes-config/v2/**/openapi.yaml#/paths/~1control-planes~1%7BcontrolPlaneId%7D~1core-entities~1routes"
      - "src/konnect/definitions/control-planes-config/v2/**/openapi.yaml#/paths/~1control-planes~1%7BcontrolPlaneId%7D~1core-entities~1routes~1%7Broute_id%7D"
      - "src/konnect/definitions/control-planes-config/v2/**/openapi.yaml#/paths/~1control-planes~1%7BcontrolPlaneId%7D~1core-entities~1routes~1%7Broute_id%7D~1plugins"
      - "src/konnect/definitions/control-planes-config/v2/**/openapi.yaml#/paths/~1control-planes~1%7BcontrolPlaneId%7D~1core-entities~1routes~1%7Broute_id%7D~1plugins~1%7Bplugin_id_or_instance_name%7D"
      - "src/konnect/definitions/control-planes-config/v2/**/openapi.yaml#/paths/~1control-planes~1%7BcontrolPlaneId%7D~1core-entities~1certificates"
      - "src/konnect/definitions/control-planes-config/v2/**/openapi.yaml#/paths/~1control-planes~1%7BcontrolPlaneId%7D~1core-entities~1certificates~1%7Bcertificate_id%7D"
      - "src/konnect/definitions/control-planes-config/v2/**/openapi.yaml#/paths/~1control-planes~1%7BcontrolPlaneId%7D~1core-entities~1certificates~1%7Bcertificate_name_or_id%7D~1snis"
      - "src/konnect/definitions/control-planes-config/v2/**/openapi.yaml#/paths/~1control-planes~1%7BcontrolPlaneId%7D~1core-entities~1certificates~1%7Bcertificate_id%7D~1snis~1%7Bsni_id%7D"
      - "src/konnect/definitions/control-planes-config/v2/**/openapi.yaml#/paths/~1control-planes~1%7BcontrolPlaneId%7D~1core-entities~1consumers"
      - "src/konnect/definitions/control-planes-config/v2/**/openapi.yaml#/paths/~1control-planes~1%7BcontrolPlaneId%7D~1core-entities~1consumers~1%7Bconsumer_id%7D"
      - "src/konnect/definitions/control-planes-config/v2/**/openapi.yaml#/paths/~1control-planes~1%7BcontrolPlaneId%7D~1core-entities~1consumers~1%7Bconsumer_id%7D~1plugins"
      - "src/konnect/definitions/control-planes-config/v2/**/openapi.yaml#/paths/~1control-planes~1%7BcontrolPlaneId%7D~1core-entities~1consumers~1%7Bconsumer_id%7D~1plugins~1%7Bplugin_id_or_instance_name%7D"
      - "src/konnect/definitions/control-planes-config/v2/**/openapi.yaml#/paths/~1control-planes~1%7BcontrolPlaneId%7D~1core-entities~1consumers~1%7Bconsumer_id%7D~1consumer_groups"
      - "src/konnect/definitions/control-planes-config/v2/**/openapi.yaml#/paths/~1control-planes~1%7BcontrolPlaneId%7D~1core-entities~1consumer_groups"
      - "src/konnect/definitions/control-planes-config/v2/**/openapi.yaml#/paths/~1control-planes~1%7BcontrolPlaneId%7D~1core-entities~1consumer_groups~1%7Bgroup_id%7D"
      - "src/konnect/definitions/control-planes-config/v2/**/openapi.yaml#/paths/~1control-planes~1%7BcontrolPlaneId%7D~1core-entities~1consumer_groups~1%7Bgroup_id%7D~1consumers"
      - "src/konnect/definitions/control-planes-config/v2/**/openapi.yaml#/paths/~1control-planes~1%7BcontrolPlaneId%7D~1core-entities~1key-sets"
      - "src/konnect/definitions/control-planes-config/v2/**/openapi.yaml#/paths/~1control-planes~1%7BcontrolPlaneId%7D~1core-entities~1key-sets~1%7Bkey-set_id_or_name%7D"
      - "src/konnect/definitions/control-planes-config/v2/**/openapi.yaml#/paths/~1control-planes~1%7BcontrolPlaneId%7D~1core-entities~1keys"
      - "src/konnect/definitions/control-planes-config/v2/**/openapi.yaml#/paths/~1control-planes~1%7BcontrolPlaneId%7D~1core-entities~1keys~1%7Bkey_id_or_name%7D"
      - "src/konnect/definitions/control-planes-config/v2/**/openapi.yaml#/paths/~1control-planes~1%7BcontrolPlaneId%7D~1core-entities~1plugins"
      - "src/konnect/definitions/control-planes-config/v2/**/openapi.yaml#/paths/~1control-planes~1%7BcontrolPlaneId%7D~1core-entities~1plugins~1%7Bplugin_id_or_instance_name%7D"
      - "src/konnect/definitions/control-planes-config/v2/**/openapi.yaml#/paths/~1control-planes~1%7BcontrolPlaneId%7D~1core-entities~1snis"
      - "src/konnect/definitions/control-planes-config/v2/**/openapi.yaml#/paths/~1control-planes~1%7BcontrolPlaneId%7D~1core-entities~1snis~1%7Bsni_id%7D"
      - "src/konnect/definitions/control-planes-config/v2/**/openapi.yaml#/paths/~1control-planes~1%7BcontrolPlaneId%7D~1core-entities~1upstreams"
      - "src/konnect/definitions/control-planes-config/v2/**/openapi.yaml#/paths/~1control-planes~1%7BcontrolPlaneId%7D~1core-entities~1upstreams~1%7Bupstream_id%7D"
      - "src/konnect/definitions/control-planes-config/v2/**/openapi.yaml#/paths/~1control-planes~1%7BcontrolPlaneId%7D~1core-entities~1upstreams~1%7Bupstream_id%7D~1targets"
      - "src/konnect/definitions/control-planes-config/v2/**/openapi.yaml#/paths/~1control-planes~1%7BcontrolPlaneId%7D~1core-entities~1upstreams~1%7Bupstream_id%7D~1targets~1%7Btarget_id%7D"
      - "src/konnect/definitions/control-planes-config/v2/**/openapi.yaml#/paths/~1control-planes~1%7BcontrolPlaneId%7D~1core-entities~1vaults"
      - "src/konnect/definitions/control-planes-config/v2/**/openapi.yaml#/paths/~1control-planes~1%7BcontrolPlaneId%7D~1core-entities~1vaults~1%7Bvault_id_or_prefix%7D"
      - "src/konnect/definitions/control-planes-config/v2/**/openapi.yaml#/paths/~1control-planes~1%7BcontrolPlaneId%7D~1core-entities~1schemas~1plugins~1%7Bplugin_name%7D"
      - "src/konnect/definitions/control-planes-config/v2/**/openapi.yaml#/paths/~1control-planes~1%7BcontrolPlaneId%7D~1core-entities~1debug~1node~1log-level"
      - "src/konnect/definitions/control-planes-config/v2/**/openapi.yaml#/paths/~1control-planes~1%7BcontrolPlaneId%7D~1core-entities~1debug~1node~1log-level~1%7Blog_level%7D"
      - "src/konnect/definitions/control-planes-config/v2/**/openapi.yaml#/paths/~1control-planes~1%7BcontrolPlaneId%7D~1core-entities~1debug~1cluster~1log-level~1%7Blog_level%7D"
      - "src/konnect/definitions/control-planes-config/v2/**/openapi.yaml#/paths/~1control-planes~1%7BcontrolPlaneId%7D~1core-entities~1debug~1cluster~1control-planes-nodes~1log-level~1%7Blog_level%7D"
      - "src/konnect/definitions/control-planes-config/v2/**/openapi.yaml#/components/parameters/certificate_id"
      - "src/konnect/definitions/control-planes-config/v2/**/openapi.yaml#/components/parameters/service_id"
      - "src/konnect/definitions/control-planes-config/v2/**/openapi.yaml#/components/parameters/ca_certificate_id"
      - "src/konnect/definitions/control-planes-config/v2/**/openapi.yaml#/components/parameters/certificate_name_or_id"
      - "src/konnect/definitions/control-planes-config/v2/**/openapi.yaml#/components/parameters/sni_id"
      - "src/konnect/definitions/control-planes-config/v2/**/openapi.yaml#/components/parameters/consumer_id"
      - "src/konnect/definitions/control-planes-config/v2/**/openapi.yaml#/components/parameters/plugin_id_or_instance_name"
      - "src/konnect/definitions/control-planes-config/v2/**/openapi.yaml#/components/parameters/key-set_id_or_name"
      - "src/konnect/definitions/control-planes-config/v2/**/openapi.yaml#/components/parameters/key_id_or_name"
      - "src/konnect/definitions/control-planes-config/v2/**/openapi.yaml#/components/parameters/upstream_id"
      - "src/konnect/definitions/control-planes-config/v2/**/openapi.yaml#/components/parameters/target_id"
      - "src/konnect/definitions/control-planes-config/v2/**/openapi.yaml#/components/parameters/vault_id_or_prefix"
      - "src/konnect/definitions/control-planes-config/v2/**/openapi.yaml#/components/parameters/route_id"
      - "src/konnect/definitions/control-planes-config/v2/**/openapi.yaml#/components/parameters/log_level"
      - "src/konnect/definitions/control-planes-config/v2/**/openapi.yaml#/components/parameters/group_id"
      - "src/konnect/definitions/control-planes-config/v2/**/openapi.yaml#/components/parameters/tag"
      - "src/konnect/definitions/control-planes-config/v2/**/openapi.yaml#/components/parameters/control_plane_id"
      - "src/konnect/definitions/control-planes-config/v2/**/openapi.yaml#/components/schemas/Service"
      - "src/konnect/definitions/control-planes-config/v2/**/openapi.yaml#/components/schemas/Consumer"
      - "src/konnect/definitions/control-planes-config/v2/**/openapi.yaml#/components/schemas/Key-set"
      - "src/konnect/definitions/control-planes-config/v2/**/openapi.yaml#/components/schemas/control_plane_id"
      - "src/konnect/definitions/control-planes-config/v2/**/openapi.yaml#/components/responses/tags-response"
      - "src/konnect/definitions/control-planes-config/v2/**/openapi.yaml#/components/responses/ca-cert-response"
    rules:
      errors-problem-json-aip-193: "off"
      errors-require-type-aip-193: "off"
      oas3-unused-component: "off"
      path-parameters-camelCase-alphanumeric: "off"
      validation-error-invalid-parameters-aip-193: "off"
      errors-post-not-contain-200: "off"
      paths-kebab-case-aip-122: "off"

  # Device Authorization Grant APIs following RFC 8628
  #  See https://www.rfc-editor.org/rfc/rfc8628
  - files: # /internal/oauth/device
      - "src/konnect/definitions/identity/v3/**/openapi.yaml#/paths/~1internal~1oauth~1device~1authorize/post/responses"
      - "src/konnect/definitions/identity/v3/**/openapi.yaml#/paths/~1internal~1oauth~1device~1token/post/responses"
      - "src/konnect/definitions/identity/v3/**/openapi.yaml#/components/responses/DeviceAuthorizationGrantAuthorizeBadRequest"
      - "src/konnect/definitions/identity/v3/**/openapi.yaml#/components/responses/DeviceAuthorizationGrantTokenBadRequest"
    rules:
      errors-problem-json-aip-193: "off"
      errors-post-not-contain-200: "off"
  - files:
      - "src/konnect/definitions/servicehub/**/openapi.yaml#/components/schemas/EnumConfigFieldSchema"
    rules:
      oas3-valid-schema-example: "off"
  - files:
       - "src/konnect/definitions/servicehub/**/openapi.yaml#/components/schemas/Revision"
    rules:
      blocked-field-names: "off"

  # Legacy internal API rules
  - files: 
      - "src/internal/definitions/documenthub-konnect/**/openapi.yaml"
      - "src/internal/definitions/documenthub-portal/**/openapi.yaml"
    rules:
      blocked-field-names: "off"

  - files:
      - "src/internal/definitions/documenthub-portal/v0/openapi.yaml#/paths/~1has-documentation/post/responses"
    rules:
      errors-post-not-contain-200: "off"
  - files:
    - "src/konnect/definitions/external-consumers-auth/**/openapi.yaml"
    rules:
      server-url-must-contain-version-aip-3101: "off"
      server-in-approved-list: "off"
  - files:
      - "src/konnect/definitions/notification-hub/**/openapi.yaml"
    rules:
      errors-post-not-contain-200: "off"
